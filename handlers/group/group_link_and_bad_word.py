import asyncio

from aiogram import Router, Bot
from aiogram.types import Message, MessageReactionUpdated

from filters.admin_chat import IsAdminChat
from filters.groups_chat import IsGroup
from config_data.config import banned_messages, words_of_gratitude
from database import requests as rq
from database.models import MessageId
from config_data.config import Config, load_config
from handlers.group.word_of_gratitude import word_of_gradit

import logging
import datetime

config: Config = load_config()
router = Router()


@router.message(IsGroup())
async def check_messages(message: Message, bot: Bot):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª—é–±–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –≥—Ä—É–ø–ø–µ
    :param message:
    :param bot:
    :return:
    """
    logging.info(f'check_messages {message.message_thread_id} {message.chat.id} {message.from_user.id}')
    # –µ—Å–ª–∏ –∞–ø–¥–µ–π—Ç –ø—Ä–∏—à–µ–ª –∏–∑ —Ç–æ–ø–∏–∫–∞ "–ß–∞—Å—Ç–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è. (–õ–∞—Ä–µ–∫ –ú–∞—Å—Ç–µ—Ä–∞)"
    if message.message_thread_id == 67830:
        # –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –æ—Ç–≤–µ—Ç–Ω–æ–µ
        if message.reply_to_message.text:
            pass
        # –≤—Å–µ —Å–æ–æ—â–µ–Ω–∏–µ –Ω–µ –æ—Ç —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        elif message.from_user.id not in [7727341378, 1492644981, 1572221921, 843554518]:
            await message.delete()
            msg = await message.answer(text='–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –º–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç—ã —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞'
                                            ' @MyderatorGroupsBot.\n'
                                            '–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É –≤ –±–æ—Ç–µ, –º—ã –µ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –∏ –æ–ø—É–±–ª–∏–∫—É–µ–º!')
            await asyncio.sleep(10)
            await msg.delete()
            return
    # –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ –ë–î -> MessageId
    print(message)
    await rq.update_message_id(tg_id=message.from_user.id,
                               message_id=message.message_id,
                               message_thread_id=message.message_thread_id)
    # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = message.text
    text_ = ''
    if text:
        text_ = text.lower().split()
    # –ø–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ
    if message.caption:
        text_ = message.caption.lower().split()
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ –ª–∏ —é–∑–µ—Ä –≤ –ë–î, –µ—Å–ª–∏ –Ω–µ—Ç –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    await rq.check_chat_user(message)
    # –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ
    if not text and not message.caption:
        return
    # –∏–Ω–∞—á–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤
    else:
        # —Å–ø–∏—Å–æ–∫ –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤
        for banned_message in banned_messages:
            # –ï—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
            if banned_message.lower().replace(' ', '') in text_:
                await message.delete()
                # –≤—ã–¥–µ–ª—è–µ–º "–ø–ª–æ—Ö–æ–µ" —Å–ª–æ–≤–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
                word = ''
                for w in text_:
                    if banned_message.lower().replace(' ', '') == w:
                        word = w
                # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await rq.add_chat_action(user_id=message.from_user.id,
                                         type_='bad word')
                # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π (–∏ –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç —Å–æ–≤–µ—Ä—à–∞–µ–º –∑–∞–¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ)
                await rq.check_violations(message=message, bot=bot, word_bad=word)
                return
        # —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
        await word_of_gradit(message=message, text_=text_)


@router.message(IsGroup())
@router.message_reaction(IsGroup())
async def check_messages(message_reaction: MessageReactionUpdated, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ
    :param message_reaction:
    :param bot:
    :return:
    """
    logging.info('check_messages message_reaction')
    # –µ—Å–ª–∏ –Ω–æ–≤–∞—è —Ä–µ–∞–∫—Ü–∏—è
    if message_reaction.new_reaction:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ä–µ–∞–∫—Ü–∏—è 'üëç'
        if message_reaction.new_reaction[0].emoji == 'üëç':
            # –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ 'üëç'
            message_id: MessageId = await rq.select_message_id(message_id=message_reaction.message_id)
            if message_id:
                # if not message_id.message_thread_id:
                #     print('not message_id.message_thread_id:')
                #     return
                # –µ—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏—è –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–≤–æ–µ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if message_id.tg_id == message_reaction.user.id:
                    return
                helping_user = await rq.select_chat_user(message_id.tg_id)
                chat_user = await rq.select_chat_user(message_id.tg_id)
                await rq.add_total_help(helping_user.tg_id)
                await rq.add_reputation(user_id=helping_user.tg_id)
                await rq.add_chat_action(user_id=message_id.tg_id,
                                         type_='help boost')
                await rq.update_last_help_boost(message_id.tg_id)
                msg = await bot.send_message(chat_id=message_reaction.chat.id,
                                             text=f'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href="tg://user?id={helping_user.tg_id}">'
                                                  f'{helping_user.user_name}</a>'
                                                  f' (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {helping_user.total_help}) '
                                                  f'–ø–æ–º–æ–≥ –≤ –ß–ê–¢–ï –∏ '
                                                  f'–∑–∞—Ä–∞–±–æ—Ç–∞–ª +1 –∫ —Å–≤–æ–µ–º—É –æ–±—â–µ–º—É —Ä–µ–π—Ç–∏–Ω–≥—É',
                                             message_thread_id=message_id.message_thread_id)
                await asyncio.sleep(1 * 60)
                await msg.delete()
        if message_reaction.new_reaction[0].emoji == 'üëé':
            message_id: MessageId = await rq.select_message_id(message_id=message_reaction.message_id)
            if message_id:
                helping_user = await rq.select_chat_user(message_id.tg_id)
                chat_user = await rq.select_chat_user(message_id.tg_id)
                await rq.update_last_rep_boost(message_id.tg_id)
                await rq.remove_reputation(message_id.tg_id)
                await rq.add_chat_action(user_id=message_id.tg_id,
                                         type_='rep unboost')
                msg = await bot.send_message(chat_id=message_reaction.chat.id,
                                             text=f'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message_reaction.user.full_name} '
                                                  f'–ø–æ—Å—Ç–∞–≤–∏–ª üëé –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_user.first_name} {chat_user.last_name}'
                                                  f' (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {helping_user.total_help}) –∏ '
                                                  f'–ø–æ–Ω–∏–∑–∏–ª –µ–≥–æ —Ä–µ–ø—É –Ω–∞ -1',
                                             message_thread_id=message_id.message_thread_id)
                await asyncio.sleep(1 * 60)
                await msg.delete()

from aiogram.types import Message
from aiogram.filters import Command, CommandObject, or_f
from aiogram import Bot, Router

from database import requests as rq
from database.models import ChatUser
from filters.admin_chat import IsAdminCheck, IsAdminChat
from filters.groups_chat import IsGroup
from utils.error_handling import error_handler

import logging
import asyncio

router = Router()


@router.message(IsGroup(),
                Command('unban', prefix="!"),
                IsAdminChat())
@error_handler
async def into_command_unban_user(message: Message, bot: Bot, command: CommandObject):
    """
    –ö–æ–º–∞–Ω–¥–∞ /unban –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≥—Ä—É–ø–ø—ã
    :param message:
    :param command:
    :param bot:
    :return:
    """
    logging.info('into_command_unban_user')
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if not message.reply_to_message:
        await message.answer('–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã unban —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        return
    try:
        user_id = message.reply_to_message.from_user.id
        await bot.unban_chat_member(chat_id=message.chat.id, user_id=user_id)
        # –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id:
            msg = await message.answer(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <a href='tg://user?id={message.from_user.id}'>"
                                       f"{message.from_user.full_name}</a>\n"
                                       f"üì£ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª <a href='tg://user?id={user_id}'>"
                                       f"{message.reply_to_message.from_user.username}</a>\n")
            await asyncio.sleep(5)
            await msg.delete()

        else:
            msg = await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            await asyncio.sleep(5)
            await msg.delete()
    except Exception as e:
        msg = await message.reply(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û—à–∏–±–∫–∞: {e}")
        await asyncio.sleep(5)
        await msg.delete()


@router.message(IsGroup(),
                Command('unban', prefix="!"))
@error_handler
async def into_command_unban_user(message: Message,  bot: Bot):
    """
    –ö–æ–º–∞–Ω–¥–∞ /unban –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≥—Ä—É–ø–ø—ã
    :param message:
    :param bot:
    :return:
    """
    logging.info('into_command_unban_user')
    msg = await message.answer(text='–ö–æ–º–∞–Ω–¥—É !unban –º–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã')
    await asyncio.sleep(5)
    await msg.delete()

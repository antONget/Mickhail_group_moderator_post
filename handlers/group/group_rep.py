from aiogram import Router, Bot, F
from aiogram.types import Message

from filters.groups_chat import IsGroup
from database import requests as rq
from config_data.config import Config, load_config

import logging
import asyncio
import datetime

config: Config = load_config()
router = Router()


@router.message(IsGroup(),
                F.text.endswith('rep'))
async def check_messages(message: Message, bot: Bot):
    """
    –£–≤–µ–ª–∏—á–µ–Ω–∏–µ/—É–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ —á—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∏–ª–∏
    :param message:
    :param bot:
    :return:
    """
    logging.info(f'check_messages')
    await rq.check_chat_user(message)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ –ª–∏ —é–∑–µ—Ä –≤ –ë–î, –µ—Å–ª–∏ –Ω–µ—Ç –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if message.html_text == '+rep':
        if message.reply_to_message.text:
            if message.reply_to_message.from_user.id == message.from_user.id:
                await message.reply('üö´ –¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ–≤—ã—Å–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é —Å–∞–º —Å–µ–±–µ.')
            else:
                chat_user = await rq.select_chat_user(message.from_user.id)
                rep_boost_user = await rq.select_chat_user(message.reply_to_message.from_user.id)
                if chat_user.last_rep_boost <= datetime.datetime.now() - datetime.timedelta(hours=float(config.tg_bot.time_of_rep)):
                    await rq.update_last_rep_boost(message.from_user.id)
                    await rq.add_reputation(message.reply_to_message.from_user.id)
                    await rq.add_chat_action(user_id=message.from_user.id,
                                             type_='rep boost')
                    await message.reply(f'üë§ {message.from_user.full_name}'
                                        f' ({chat_user.reputation} —Ä–µ–ø—É—Ç–∞—Ü–∏–∏) –ø–æ–¥–Ω—è–ª —Ä–µ–ø—É—Ç–∞—Ü–∏—é '
                                        f'{message.reply_to_message.from_user.full_name}'
                                        f' ({rep_boost_user.reputation} + 1 —Ä–µ–ø—É—Ç–∞—Ü–∏–∏).')
                else:
                    await message.reply(f'üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–Ω–∏–º–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –µ—â–µ'
                                        f' {str(chat_user.last_rep_boost - datetime.datetime.now() + datetime.timedelta(hours=float(config.tg_bot.time_of_rep))).split(".")[0]} —á–∞—Å–æ–≤.')

        else:
            msg = await message.reply(f'‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!')
            await asyncio.sleep(5)
            await msg.delete()
    elif message.html_text == '-rep':
        if message.reply_to_message.text:
            if message.reply_to_message.from_user.id == message.from_user.id:
                await message.reply('üö´ –¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ–Ω–∏–∂–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é —Å–∞–º —Å–µ–±–µ.')
            else:
                chat_user = await rq.select_chat_user(message.from_user.id)
                rep_boost_user = await rq.select_chat_user(message.reply_to_message.from_user.id)
                if chat_user.last_rep_boost <= datetime.datetime.now() - datetime.timedelta(hours=float(config.tg_bot.time_of_rep)):
                    await rq.update_last_rep_boost(message.from_user.id)
                    await rq.remove_reputation(message.reply_to_message.from_user.id)
                    await rq.add_chat_action(user_id=message.from_user.id,
                                             type_='rep unboost')
                    await message.reply(f'üë§ {message.from_user.full_name} ({chat_user.reputation}'
                                        f' —Ä–µ–ø—É—Ç–∞—Ü–∏–∏) –ø–æ–Ω–∏–∑–∏–ª —Ä–µ–ø—É—Ç–∞—Ü–∏—é '
                                        f'{message.reply_to_message.from_user.full_name}'
                                        f' ({rep_boost_user.reputation} - 1 —Ä–µ–ø—É—Ç–∞—Ü–∏–∏).')

                else:
                    await message.reply(f'üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–Ω–∏–∂–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –µ—â–µ {str(chat_user.last_rep_boost - datetime.datetime.now() + datetime.timedelta(hours=float(config.tg_bot.time_of_rep))).split(".")[0]} —á–∞—Å–æ–≤.')

        else:
            msg = await message.reply(f'‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!')
            await asyncio.sleep(5)
            await msg.delete()

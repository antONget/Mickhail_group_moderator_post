from aiogram import Router, Bot
from aiogram.filters import Command, or_f
from aiogram.types import Message, ChatPermissions
from aiogram.exceptions import TelegramBadRequest

from filters.admin_chat import IsAdminCheck, IsAdminChat
from filters.groups_chat import IsGroup
from config_data.config import Config, load_config
from utils.error_handling import error_handler

import logging
import asyncio
import datetime
import re

config: Config = load_config()
router = Router()


@router.message(IsGroup(),
                Command('mute', prefix="!"),
                IsAdminChat())
@error_handler
async def mute_chat_member(message: Message, bot: Bot):
    logging.info(f'mute_chat_member')
    if message.reply_to_message:
        member_id = message.reply_to_message.from_user.id
        chat_id = message.chat.id
        only_read_permissions = ChatPermissions(can_send_messages=False,
                                                can_send_media_messages=False,
                                                can_send_polls=False,
                                                can_send_other_messages=False,
                                                can_add_web_page_previews=False,
                                                can_change_info=False,
                                                can_invite_users=False,
                                                can_pin_messages=False)
        # –≠—Ç–æ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "(!mute)".
        # –ó–∞ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–µ—Ç —Å–ª–µ–¥–æ–≤–∞—Ç—å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç (\d+), –∞ –∑–∞—Ç–µ–º —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç —Å–ª–µ–¥–æ–≤–∞—Ç—å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ
        # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ (–±—É–∫–≤–µ–Ω–Ω–æ–µ) –∑–Ω–∞—á–µ–Ω–∏–µ ([a-zA-Z–∞-—è–ê-–Ø ]+).
        command = re.compile(r"(!mute) ?(\d+)? ?([a-zA-Z–∞-—è–ê-–Ø ]+)?").match(message.text)
        time = command.group(2)
        comment = command.group(3)
        if not time:
            time = 30
        else:
            time = int(time)
        until_date = datetime.datetime.now() + datetime.timedelta(minutes=time)
        try:
            await bot.restrict_chat_member(chat_id=chat_id,
                                           user_id=member_id,
                                           permissions=only_read_permissions,
                                           until_date=until_date)
            await message.reply(f'üîá {message.reply_to_message.from_user.full_name}'
                                f' –±—ã–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ {time} –º–∏–Ω—É—Ç.\n'
                                f'üí¨ –ü—Ä–∏—á–∏–Ω–∞ {comment}')
        except TelegramBadRequest:
            await message.reply(f'üö´ –≠—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ–ª—å–∑—è –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π!')
    else:
        msg = await message.reply(f'‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!')
        await asyncio.sleep(5)
        await msg.delete()


@router.message(IsGroup(),
                Command('unmute', prefix='!'),
                or_f(IsAdminCheck(),
                IsAdminChat()))
@error_handler
async def unmute_chat_member(message: Message, bot: Bot):
    logging.info(f'unmute_chat_member')
    if message.reply_to_message:
        member_id = message.reply_to_message.from_user.id
        chat_id = message.chat.id
        chat_permission = (await bot.get_chat(message.chat.id)).permissions
        try:
            await bot.restrict_chat_member(chat_id=chat_id,
                                           user_id=member_id,
                                           permissions=chat_permission,
                                           until_date=datetime.datetime.now())
            await message.reply(f'üë§ {message.from_user.full_name}'
                                f' —Ä–∞–∑–º—É—Ç–∏–ª {message.reply_to_message.from_user.full_name}\n')
        except TelegramBadRequest:
            await message.reply('füö´ –≠—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–ª—å–∑—è —Ä–∞–∑–º—É—Ç–∏—Ç—å!')
    else:
        msg = await message.reply(f'‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!')
        await asyncio.sleep(15)
        await msg.delete()


@router.message(IsGroup(),
                or_f(Command('mute', prefix="!"),
                     Command('unmute', prefix="!")))
@error_handler
async def into_command_ban_user(message: Message,  bot: Bot):
    """
    –ö–æ–º–∞–Ω–¥–∞ mute/unmute –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≥—Ä—É–ø–ø—ã
    :param message:
    :param bot:
    :return:
    """
    logging.info('into_command_ban_user')
    msg = await message.answer(text='–ö–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã')
    await asyncio.sleep(5)
    await msg.delete()

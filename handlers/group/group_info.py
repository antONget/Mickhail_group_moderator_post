from aiogram import Router, Bot
from aiogram.filters import Command, CommandObject
from aiogram.types import Message

from filters.groups_chat import IsGroup
from database import requests as rq
from config_data.config import Config, load_config

import logging

config: Config = load_config()
router = Router()


@router.message(IsGroup(),
                Command('info', prefix='!'))
async def command_info(message: Message, bot: Bot):
    """
    –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤—ã–∑–≤–∞–≤—à–µ–≥–æ –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∫–∞–∫ –æ—Ç–≤–µ—Ç–Ω—É—é —Ç–æ –ø–æ–ª—É—á–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
     –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–∞ —á—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ–º
    :param message:
    :param bot:
    :return:
    """
    logging.info(f'command_info')
    await rq.check_chat_user(message)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ –ª–∏ —é–∑–µ—Ä –≤ –ë–î, –µ—Å–ª–∏ –Ω–µ—Ç –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if not message.reply_to_message:
        logging.info(f'command_info not-replay')
        chat_user = await rq.select_chat_user(message.from_user.id)
        count_violations = await rq.count_user_violations(user_id=message.from_user.id,
                                                          hours=(24 * 30))
        await message.reply(f'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {message.from_user.full_name}\n'
                            f'üë§ –†–µ–ø—É—Ç–∞—Ü–∏—è: {chat_user.reputation}\n'
                            f'üöë –í—Å–µ–≥–æ –ø–æ–º–æ—â–∏: {chat_user.total_help}\n'
                            f'üîá –ö–æ–ª-–≤–æ –º—É—Ç–æ–≤: {chat_user.mutes}\n'
                            f'üö´ –ö–æ–ª-–≤–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π: {count_violations}')
    else:
        logging.info(f'command_info replay')
        chat_user = await rq.select_chat_user(message.reply_to_message.from_user.id)
        count_violations = await rq.count_user_violations(message.reply_to_message.from_user.id, hours=(24 * 30))
        await message.reply(f'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {message.reply_to_message.from_user.full_name}\n'
                            f'üë§ –†–µ–ø—É—Ç–∞—Ü–∏—è: {chat_user.reputation}\n'
                            f'üöë –í—Å–µ–≥–æ –ø–æ–º–æ—â–∏: {chat_user.total_help}\n'
                            f'üîá –ö–æ–ª-–≤–æ –º—É—Ç–æ–≤: {chat_user.mutes}\n'
                            f'üö´ –ö–æ–ª-–≤–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π: {count_violations}')


@router.message(IsGroup(),
                Command('info_top', prefix='!'))
async def command_info_top(message: Message, command: CommandObject, bot: Bot):
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —á–∏—Å–ª–æ,
     —Ç–æ —Å–ø–∏—Å–æ–∫ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ —ç—Ç–∏–º —á–∏—Å–ª–æ–º
    :param message:
    :param command:
    :param bot:
    :return:
    """
    logging.info(f'command_info_top')
    if not command.args:
        top = 10
    else:
        top_arg = command.args
        try:
            top = int(top_arg)
        except:
            await message.answer(text='–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É–∫–∞–∑–∞–Ω–æ —á–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
            return
    list_users = await rq.select_chat_actions_top()
    if len(list_users) >= top:
        text = f'<b>–°–ø–∏—Å–æ–∫ TOP - {top}</b>\n\n'
        i = 0
        for user in list_users[:top]:
            i += 1
            text += f'{i}. <a href="tg://user?id={user.tg_id}">{user.user_name}</a> - {user.reputation}\n'
        await message.answer(text=text)
    else:
        await message.answer(text='–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ')

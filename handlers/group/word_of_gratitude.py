from database import requests as rq
from config_data.config import words_of_gratitude
from aiogram.types import Message
import logging
import asyncio
from database.models import MessageId
from config_data.config import Config, load_config

config: Config = load_config()


async def word_of_gradit(message: Message, text_: list):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏ –≤ –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    :param message:
    :param text_:
    :return:
    """
    logging.info(f'word_of_gradit {message.from_user.id}')
    if message.message_thread_id == 67830:
        return
    text_str = ''.join(text_)
    # –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Å–ª–æ–≤–∞–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
    for word_of_gratitude in words_of_gratitude:
        # –ø–æ–∏—Å–∫ —Å–ª–æ–≤ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        if word_of_gratitude.lower().replace(' ', '') in text_str:
            # –µ—Å–ª–∏ –∞–ø–¥–µ–π—Ç —ç—Ç–æ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Ñ–æ—Ç–æ –∏ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç, —Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
            if not message.reply_to_message.text and not message.reply_to_message.photo and\
                    not bool(message.reply_to_message.document):
                return
            # –∏–Ω–∞—á–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ —Å–æ–≤–µ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            elif message.reply_to_message.from_user.id == message.from_user.id:
                msg = await message.answer('üëÆ‚Äç‚ôÇ –î–∞–∂–µ –Ω–µ –ø—ã—Ç–∞–π—Å—è –Ω–∞–∫—Ä—É—Ç–∏—Ç—å —Å–µ–±–µ —Ö–æ—Ä–æ—à—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
                await asyncio.sleep(1 * 60)
                await msg.delete()
                return
            # –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —á—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∏–ª–∏
            else:
                user_plus = message.reply_to_message.from_user.id
                # –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Å–æ–≤–µ—Ä—à–µ–Ω–æ –≤ —Ç–æ–ø–∏–∫–µ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
                if message.message_thread_id == int(config.tg_bot.comment_topic):
                    message_replay = message.reply_to_message.message_id
                    message_user: MessageId = await rq.select_message_id(message_id=message_replay)
                    user_plus = message_user.tg_id
            # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–Ω—ã–º
            if message.reply_to_message:
                # –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º –∫—Ç–æ –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
                chat_user = await rq.select_chat_user(message.from_user.id)
                if chat_user:
                    # –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —á—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∏–ª–∏
                    helping_user = await rq.select_chat_user(user_plus)
                    await rq.add_total_help(helping_user.tg_id)
                    await rq.add_reputation(user_id=helping_user.tg_id)
                    await rq.add_chat_action(user_id=message.from_user.id,
                                             type_='help boost')
                    await rq.update_last_help_boost(message.from_user.id)
                    msg = await message.reply(f'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href="tg://user?id={helping_user.tg_id}">'
                                              f'{helping_user.user_name}</a>'
                                              f' (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {helping_user.total_help}) '
                                              f'–ø–æ–º–æ–≥ –≤ –ß–ê–¢–ï –∏ '
                                              f'–∑–∞—Ä–∞–±–æ—Ç–∞–ª +1 –∫ —Å–≤–æ–µ–º—É –æ–±—â–µ–º—É —Ä–µ–π—Ç–∏–Ω–≥—É')
                    await asyncio.sleep(1 * 60)
                    await msg.delete()
